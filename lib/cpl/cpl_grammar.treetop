grammar CPLGrammar
  rule pattern
    line+ {
      def make_pattern
        pattern = Christel::Pattern.new("unnamed")
        elements.each do |e|
          e.operate_on pattern
        end
        pattern
      end
    }
  end

  rule line
    stitch {
      def operate_on pattern
        stitch_elem = Christel::Stitch.new(text_value.to_sym)
        pattern.add_stitch stitch_elem
      end
    } / num_stitches {
      def operate_on pattern
        stitch_type = elements[1].text_value.to_sym
        elements[0].eval.times do ||
          pattern.add_stitch Christel::Stitch.new(stitch_type)
        end
      end
    }/ comment / "\n" {
      def operate_on pattern
        # End of line, nothing to do.
      end
    }
  end

  rule comment
    '#' [^\n]*
  end

  rule number
    [0-9]* {
      def eval
        text_value.to_i
      end
    }
  end

  rule num_stitches
    number stitch
  end

  rule stitch
    "ch"
  end
end
